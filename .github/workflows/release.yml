name: Create a release

on:
  push:
    branches:
      - main
      - ReleaseCI
    # paths:
    #   - "pyproject.toml"

jobs:
  cancel-previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  check:
    name: Detect version change
    runs-on: ubuntu-latest

    outputs:
      newVersion: ${{ steps.changes.outputs.newVersion }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Detect new version
        id: changes
        run: |
          NEW_VERSION="$(./versionChangeCheck.sh)"
          echo "New version if changed = '$NEW_VERSION'"
          echo ::set-output name=newVersion::$NEW_VERSION

  create-release:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: ["check"]

    if: ${{ (needs.check.outputs.newVersion != '') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ needs.check.outputs.newVersion }}
          draft: true

  build:
    name: Build packages
    needs: ["create-release"]

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        version: ["3.10", "3.11-dev"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.version }}

      - run: ./build.sh

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.version }}
          path: dist/
